version: '3.8'

services:
  # Eureka Server (Service Registry)
  eureka-server:
    image: fooddeliveryapp/serviceregistry
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - food-delivery-app_default

  # API Gateway
  api-gateway:
    image: fooddeliveryapp/cloudgateway
    container_name: api-gateway
    ports:
      - "9090:9090"
    depends_on:
      - eureka-server
      - redis
    networks:
      - food-delivery-app_default
    environment:
      SPRING_OKTA_CLIENT_ID: ${SPRING_OKTA_CLIENT_ID}
      SPRING_OKTA_CLIENT_SECRET: ${SPRING_OKTA_CLIENT_SECRET}
      EUREKA_SERVER_ADDRESS: http://eureka-server:8761/eureka

  # User Service
  user-service:
    image: fooddeliveryapp/userservice
    container_name: user-service
    ports:
      - "8085:8085"
    depends_on:
      - eureka-server
    networks:
      - food-delivery-app_default
    environment:
      SPRING_OKTA_CLIENT_ID: ${SPRING_OKTA_CLIENT_ID}
      SPRING_OKTA_CLIENT_SECRET: ${SPRING_OKTA_CLIENT_SECRET}
      EUREKA_SERVER_ADDRESS: http://eureka-server:8761/eureka

  # Payment Service
  payment-service:
    image: fooddeliveryapp/paymentservice
    container_name: payment-service
    ports:
      - "8083:8083"
    depends_on:
      - eureka-server
      - payment-db
    networks:
      - food-delivery-app_default
    environment:
      DB_HOST: payment-db
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      EUREKA_SERVER_ADDRESS: http://eureka-server:8761/eureka

  # Delivery Service
  delivery-service:
    image: fooddeliveryapp/deliveryservice
    container_name: delivery-service
    ports:
      - "8084:8084"
    depends_on:
      - eureka-server
      - kafka
      - delivery-db
    networks:
      - food-delivery-app_default
    environment:
      DB_HOST: delivery-db
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      EUREKA_SERVER_ADDRESS: http://eureka-server:8761/eureka

  # Order Service
  order-service:
    image: fooddeliveryapp/orderservice
    container_name: order-service
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - kafka
      - restaurant-service
      - payment-service
      - delivery-service
      - order-db
    networks:
      - food-delivery-app_default
    environment:
      DB_HOST: order-db
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_OKTA_CLIENT_ID: ${SPRING_OKTA_CLIENT_ID}
      SPRING_OKTA_CLIENT_SECRET: ${SPRING_OKTA_CLIENT_SECRET}
      EUREKA_SERVER_ADDRESS: http://eureka-server:8761/eureka

  # Restaurant Service
  restaurant-service:
    image: fooddeliveryapp/restaurantservice
    container_name: restaurant-service
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
      - restaurant-db
    networks:
      - food-delivery-app_default
    environment:
      DB_HOST: restaurant-db
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      EUREKA_SERVER_ADDRESS: http://eureka-server:8761/eureka

  # Redis
  redis:
    image: redis
    container_name: redis
    networks:
      - food-delivery-app_default
    ports:
      - "6379:6379"

  # Kafka
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    networks:
      - food-delivery-app_default
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  # Zookeeper
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    networks:
      - food-delivery-app_default
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  # Payment Service Database
  payment-db:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: payment-db
    ports:
      - "1435:1433"
    networks:
      - food-delivery-app_default
    volumes:
      - ./db-init-script.sql:/docker-entrypoint-initdb.d/db-init-script.sql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}

  # Delivery Service Database
  delivery-db:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: delivery-db
    ports:
      - "1436:1433"
    networks:
      - food-delivery-app_default
    volumes:
      - ./db-init-script.sql:/docker-entrypoint-initdb.d/db-init-script.sql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}

  # Order Service Database
  order-db:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: order-db
    ports:
      - "1437:1433"
    networks:
      - food-delivery-app_default
    volumes:
      - ./db-init-script.sql:/docker-entrypoint-initdb.d/db-init-script.sql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}

  # Restaurant Service Database
  restaurant-db:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: restaurant-db
    ports:
      - "1438:1433"
    networks:
      - food-delivery-app_default
    volumes:
      - ./db-init-script.sql:/docker-entrypoint-initdb.d/db-init-script.sql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}

networks:
  food-delivery-app_default:
    driver: bridge